{{ 'customer.css' | asset_url | stylesheet_tag }}

<script type="text/javascript" src="{{ 'custom-register-logic.js' | asset_url }}" defer></script>

<style>
  .code-help {
    font-size: 11px;
    margin-top: 2rem;
    padding: 0;
    text-align: start;
    color: red;
    letter-spacing: 1px;
    border: solid red 1px;
    padding: 0.3rem 1rem;
    border-radius: 4px;
    background: #fff0f3;
  }
    .teacher-code__input {
    display: none !important;
  }
  .teacher-code__input.show {
    display: block !important;
  }
  .teacher-code_help-text {
    display: none;
    font-size: 1.2rem;
  }
  .ecc-affiliate {
    width: 100%;
    display: flex;
    margin: 1.2rem 0;
  }
</style>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="customer register section-{{ section.id }}-padding">
  <svg style="display: none">
    <symbol id="icon-error" viewBox="0 0 13 13">
      <circle
        cx="6.5"
        cy="6.50049"
        r="5.5"
        stroke="white"
        stroke-width="2" />
      <circle
        cx="6.5"
        cy="6.5"
        r="5.5"
        fill="#EB001B"
        stroke="#EB001B"
        stroke-width="0.7" />
      <path d="M5.87413 3.52832L5.97439 7.57216H7.02713L7.12739 3.52832H5.87413ZM6.50076 9.66091C6.88091 9.66091 7.18169 9.37267 7.18169 9.00504C7.18169 8.63742 6.88091 8.34917 6.50076 8.34917C6.12061 8.34917 5.81982 8.63742 5.81982 9.00504C5.81982 9.37267 6.12061 9.66091 6.50076 9.66091Z" fill="white" />
      <path
        d="M5.87413 3.17832H5.51535L5.52424 3.537L5.6245 7.58083L5.63296 7.92216H5.97439H7.02713H7.36856L7.37702 7.58083L7.47728 3.537L7.48617 3.17832H7.12739H5.87413ZM6.50076 10.0109C7.06121 10.0109 7.5317 9.57872 7.5317 9.00504C7.5317 8.43137 7.06121 7.99918 6.50076 7.99918C5.94031 7.99918 5.46982 8.43137 5.46982 9.00504C5.46982 9.57872 5.94031 10.0109 6.50076 10.0109Z"
        fill="white"
        stroke="#EB001B"
        stroke-width="0.7">
    </symbol>
  </svg>
  <h1>
    {{ 'customer.register.title' | t }}
  </h1>
  <div id="default-register" class="s-content default-register">
    <script>
  
  function getURLParameter() {
    const urlParams = new URLSearchParams(window.location.search);
    const redirectTo = urlParams.get('redirect_to');
    console.log("redirect_to parameter:", redirectTo);

    return redirectTo;
  }

function toggleCodeInputVisibility() {
  console.log('toggleCodeInputVisibility start');
  
  const param = getURLParameter();
  let checkbox = document.getElementById('ecc-affiliate-checkbox');

  const codeInputContainer = document.getElementById('code-input-container');
  
  if (checkbox && codeInputContainer) {
    codeInputContainer.style.display = checkbox.checked ? 'block' : 'none';
  } else {
    console.error('Checkbox or code input container not found');
  }
  console.log('toggleCodeInputVisibility end');
}

function updateCustomerTags() {
  
  const customerCodeElement = document.getElementById('RegisterForm-code');
  const teacherCodeInput = document.querySelector('.teacher-code__input');
  const customerTagsElement = document.getElementById('customer_tags');
  const checkbox = document.getElementById('ecc-affiliate-checkbox');
  
  if (!customerCodeElement || !teacherCodeInput || !customerTagsElement || !checkbox) {
    console.error('One or more required elements are missing');
    return;
  }

  const customerCode = checkbox.checked ? customerCodeElement.value : '';
  
  if (customerCode == "00001" || customerCode == "00002" || customerCode == "00003" || customerCode == "00004") {
    teacherCodeInput.classList.add('show');
    console.log('shown');
  } else {
    teacherCodeInput.classList.remove('show');
    const inputElement = teacherCodeInput.querySelector('input');
    if (inputElement) {
      inputElement.value = ''; 
    }
    console.log('hidden');
  }
  console.log('入力されたコード:', customerCode);
    
  const customerTag = checkbox.checked ? (tagMapping[customerCode] || "一般会員") : "一般会員";
  console.log('設定されたタグ:', customerTag);

  customerTagsElement.value = customerTag;
}

document.addEventListener('DOMContentLoaded', function() {
  const codeInput = document.getElementById('RegisterForm-code');
  const form = document.querySelector('form');
  const checkbox = document.getElementById('ecc-affiliate-checkbox');
  
  if (checkbox) {
    checkbox.addEventListener('change', function() {
      console.log('change')
      toggleCodeInputVisibility();
       console.log('change')
      updateCustomerTags();
       console.log('change')
    });
  } else {
    console.error('ecc-affiliate-checkbox element not found');
  }
  
  if (codeInput) {
    codeInput.addEventListener('input', updateCustomerTags);
    console.log('イベントリスナーが設定されました');
  } else {
    console.error('RegisterForm-code 要素が見つかりません');
  }
  
  if (form) {
    form.addEventListener('submit', function(e) {
      const teacherCodeElement = document.getElementById('teacher-code');
      const customerNoteInput = document.querySelector('input[name="customer[note][講師コード]"]');
      
      if (teacherCodeElement && customerNoteInput) {
        const teacherCode = teacherCodeElement.value;
        if (teacherCode) {
          customerNoteInput.value = `講師コード: ${teacherCode}`;
          console.log(customerNoteInput.value);
        }
      } else {
        console.error('teacher-code または customer[note][講師コード] 要素が見つかりません');
      }
    });
  } else {
    console.error('フォーム要素が見つかりません');
  }

  // 初期化時にも実行
  toggleCodeInputVisibility();
  updateCustomerTags();
});
    </script>
    {%- form 'create_customer', novalidate: 'novalidate' -%}
      {%- if form.errors -%}
        <h2
          class="form__message"
          tabindex="-1"
          autofocus
        >
          <svg aria-hidden="true" focusable="false">
            <use href="#icon-error" />
          </svg>
          {{ 'templates.contact.form.error_heading' | t }}
        </h2>
        <ul>
          {%- for field in form.errors -%}
            <li>
              {%- if field == 'form' -%}
                {{ form.errors.messages[field] }}
              {%- else -%}
                <a href="#RegisterForm-{{ field }}">
                  {{ form.errors.translated_fields[field] | capitalize }}
                  {{ form.errors.messages[field] }}
                </a>
              {%- endif -%}
            </li>
          {%- endfor -%}
        </ul>
      {%- endif -%}
      <div class="field">
        <input
          type="text"
          name="customer[last_name]"
          id="RegisterForm-LastName"
          {% if form.last_name %}
            value="{{ form.last_name }}"
          {% endif %}
          autocomplete="family-name"
          placeholder="{{ 'customer.register.last_name' | t }}"
        >
        <label for="RegisterForm-LastName">
          {{ 'customer.register.last_name' | t }}
        </label>
      </div>
      <div class="field">
        <input
          type="text"
          name="customer[first_name]"
          id="RegisterForm-FirstName"
          {% if form.first_name %}
            value="{{ form.first_name }}"
          {% endif %}
          autocomplete="given-name"
          placeholder="{{ 'customer.register.first_name' | t }}"
        >
        <label for="RegisterForm-FirstName">
          {{ 'customer.register.first_name' | t }}
        </label>
      </div>
      <div class="ecc-affiliate">
        <input type="checkbox" id="ecc-affiliate-checkbox">
        <span>ECCの関係者ですか？</span>
      </div>
      <div id="code-input-container" class="field" style="margin-top: 0; display: none;">
        <input
          type="text"
          name="customer[code]"
          id="RegisterForm-code"
          spellcheck="false"
          autocapitalize="off"
          aria-required="true"
          placeholder="{{ 'customer.register.customer_code' | t }}"
        >
        <label for="RegisterForm-Code">
          {{ 'customer.register.customer_code' | t }}
        </label>
      </div>
      <input
        type="hidden"
        id="customer_tags"
        name="customer[tags]"
        value="一般会員"
      >
      <div class="field teacher-code__input" style="margin-top: 1rem;">
        <input
          type="text"
          id="teacher-code"
          spellcheck="false"
          autocapitalize="off"
          aria-required="true"
          placeholder="講師コード"
          name="customer[note][講師・氏名・教室コード]"
        >
        <label for="teacher-code"> 講師コードまたは教室コードまたは氏名コード </label>
      </div>
      <div class="field">
        <input
          type="text"
          name="customer[email]"
          id="RegisterForm-email"
          {% if form.email %}
            value="{{ form.email }}"
          {% endif %}
          spellcheck="false"
          autocapitalize="off"
          autocomplete="email"
          aria-required="true"
          {% if form.errors contains 'email' %}
            aria-invalid="true"
            aria-describedby="RegisterForm-email-error"
          {% endif %}
          placeholder="{{ 'customer.register.email' | t }}"
        >
        <label for="RegisterForm-email">
          {{ 'customer.register.email' | t }}
        </label>
      </div>
      {%- if form.errors contains 'email' -%}
        <span id="RegisterForm-email-error" class="form__message">
          <svg aria-hidden="true" focusable="false">
            <use href="#icon-error" />
          </svg>
          {{ form.errors.translated_fields.email | capitalize }}
          {{ form.errors.messages.email }}.
        </span>
      {%- endif -%}
      <div class="field">
        <input
          type="text"
          name="customer[password]"
          id="RegisterForm-password"
          aria-required="true"
          {% if form.errors contains 'password' %}
            aria-invalid="true"
            aria-describedby="RegisterForm-password-error"
          {% endif %}
          placeholder="{{ 'customer.register.password' | t }}"
        >
        <label for="RegisterForm-password">
          {{ 'customer.register.password' | t }}
        </label>
      </div>
      {%- if form.errors contains 'password' -%}
        <span id="RegisterForm-password-error" class="form__message">
          <svg aria-hidden="true" focusable="false">
            <use href="#icon-error" />
          </svg>
          {{ form.errors.translated_fields.password | capitalize }}
          {{ form.errors.messages.password }}.
        </span>
      {%- endif -%}
      <button id="register-submit-button">
        {{ 'customer.register.submit' | t }}
      </button>
    {%- endform -%}
  </div>
  <div id="redirect-register" class="s-content redirect-register" style="display: none;">
    <script>
  

  function getURLParameter() {
    const urlParams = new URLSearchParams(window.location.search);
    const redirectTo = urlParams.get('redirect_to');
    console.log("redirect_to parameter:", redirectTo);

    return redirectTo;
  }

function toggleCodeInputVisibility() {
  console.log('toggleCodeInputVisibility start');
  
  const param = getURLParameter();
  let checkbox = document.getElementById('ecc-affiliate-checkbox__redirect');


  const codeInputContainer = document.getElementById('code-input-container');
  
  if (checkbox && codeInputContainer) {
    codeInputContainer.style.display = checkbox.checked ? 'block' : 'none';
  } else {
    console.error('Checkbox or code input container not found');
  }
  console.log('toggleCodeInputVisibility end');
}

function updateCustomerTags() {
  
  const customerCodeElement = document.getElementById('RegisterForm-code');
  const teacherCodeInput = document.querySelector('.teacher-code__input');
  const customerTagsElement = document.getElementById('customer_tags');
  const checkbox = document.getElementById('ecc-affiliate-checkbox');
  
  if (!customerCodeElement || !teacherCodeInput || !customerTagsElement || !checkbox) {
    console.error('One or more required elements are missing');
    return;
  }

  const customerCode = checkbox.checked ? customerCodeElement.value : '';
  
  if (customerCode == "00001" || customerCode == "00002" || customerCode == "00003" || customerCode == "00004") {
    teacherCodeInput.classList.add('show');
    console.log('shown');
  } else {
    teacherCodeInput.classList.remove('show');
    const inputElement = teacherCodeInput.querySelector('input');
    if (inputElement) {
      inputElement.value = ''; 
    }
    console.log('hidden');
  }
  console.log('入力されたコード:', customerCode);
    
  const customerTag = checkbox.checked ? (tagMapping[customerCode] || "一般会員") : "一般会員";
  console.log('設定されたタグ:', customerTag);

  customerTagsElement.value = customerTag;
}

document.addEventListener('DOMContentLoaded', function() {
  const codeInput = document.getElementById('RegisterForm-code');
  const form = document.querySelector('form');
  const checkbox = document.getElementById('ecc-affiliate-checkbox');
  
  if (checkbox) {
    checkbox.addEventListener('change', function() {
      console.log('change')
      toggleCodeInputVisibility();
       console.log('change')
      updateCustomerTags();
       console.log('change')
    });
  } else {
    console.error('ecc-affiliate-checkbox element not found');
  }
  
  if (codeInput) {
    codeInput.addEventListener('input', updateCustomerTags);
    console.log('イベントリスナーが設定されました');
  } else {
    console.error('RegisterForm-code 要素が見つかりません');
  }
  
  if (form) {
    form.addEventListener('submit', function(e) {
      const teacherCodeElement = document.getElementById('teacher-code');
      const customerNoteInput = document.querySelector('input[name="customer[note][講師コード]"]');
      
      if (teacherCodeElement && customerNoteInput) {
        const teacherCode = teacherCodeElement.value;
        if (teacherCode) {
          customerNoteInput.value = `講師コード: ${teacherCode}`;
          console.log(customerNoteInput.value);
        }
      } else {
        console.error('teacher-code または customer[note][講師コード] 要素が見つかりません');
      }
    });
  } else {
    console.error('フォーム要素が見つかりません');
  }

  // 初期化時にも実行
  toggleCodeInputVisibility();
  updateCustomerTags();
});
    </script>
    {%- form 'create_customer', novalidate: 'novalidate' -%}
      <input type="hidden" name="checkout_url" value="/cart">
      {%- if form.errors -%}
        <h2
          class="form__message"
          tabindex="-1"
          autofocus
        >
          <svg aria-hidden="true" focusable="false">
            <use href="#icon-error" />
          </svg>
          {{ 'templates.contact.form.error_heading' | t }}
        </h2>
        <ul>
          {%- for field in form.errors -%}
            <li>
              {%- if field == 'form' -%}
                {{ form.errors.messages[field] }}
              {%- else -%}
                <a href="#RegisterForm-{{ field }}">
                  {{ form.errors.translated_fields[field] | capitalize }}
                  {{ form.errors.messages[field] }}
                </a>
              {%- endif -%}
            </li>
          {%- endfor -%}
        </ul>
      {%- endif -%}
      <div class="field">
        <input
          type="text"
          name="customer[first_name]"
          id="RegisterForm-FirstName"
          {% if form.first_name %}
            value="{{ form.first_name }}"
          {% endif %}
          autocomplete="given-name"
          placeholder="{{ 'customer.register.first_name' | t }}"
        >
        <label for="RegisterForm-FirstName">
          {{ 'customer.register.first_name' | t }}
        </label>
      </div>
      <div class="field">
        <input
          type="text"
          name="customer[last_name]"
          id="RegisterForm-LastName"
          {% if form.last_name %}
            value="{{ form.last_name }}"
          {% endif %}
          autocomplete="family-name"
          placeholder="{{ 'customer.register.last_name' | t }}"
        >
        <label for="RegisterForm-LastName">
          {{ 'customer.register.last_name' | t }}
        </label>
      </div>
      <div class="ecc-affiliate">
        <input type="checkbox" id="ecc-affiliate-checkbox__redirect">
        <span>ECCの関係者ですか？</span>
      </div>
      <div id="code-input-container" class="field" style="margin-top: 0; display: none;">
        <input
          type="text"
          name="customer[code]"
          id="RegisterForm-code"
          spellcheck="false"
          autocapitalize="off"
          aria-required="true"
          placeholder="{{ 'customer.register.customer_code' | t }}"
        >
        <label for="RegisterForm-Code">
          {{ 'customer.register.customer_code' | t }}
        </label>
      </div>
      <input
        type="hidden"
        id="customer_tags"
        name="customer[tags]"
        value="一般会員"
      >
      <div class="field teacher-code__input" style="margin-top: 1rem;">
        <input
          type="text"
          id="teacher-code"
          spellcheck="false"
          autocapitalize="off"
          aria-required="true"
          placeholder="講師コード"
          name="customer[note][講師・氏名・教室コード]"
        >
        <label for="teacher-code"> 講師コードまたは教室コードまたは氏名コード </label>
      </div>
      <div class="field">
        <input
          type="email"
          name="customer[email]"
          id="RegisterForm-email"
          {% if form.email %}
            value="{{ form.email }}"
          {% endif %}
          spellcheck="false"
          autocapitalize="off"
          autocomplete="email"
          aria-required="true"
          {% if form.errors contains 'email' %}
            aria-invalid="true"
            aria-describedby="RegisterForm-email-error"
          {% endif %}
          placeholder="{{ 'customer.register.email' | t }}"
        >
        <label for="RegisterForm-email">
          {{ 'customer.register.email' | t }}
        </label>
      </div>
      {%- if form.errors contains 'email' -%}
        <span id="RegisterForm-email-error" class="form__message">
          <svg aria-hidden="true" focusable="false">
            <use href="#icon-error" />
          </svg>
          {{ form.errors.translated_fields.email | capitalize }}
          {{ form.errors.messages.email }}.
        </span>
      {%- endif -%}
      <div class="field">
        <input
          type="password"
          name="customer[password]"
          id="RegisterForm-password"
          aria-required="true"
          {% if form.errors contains 'password' %}
            aria-invalid="true"
            aria-describedby="RegisterForm-password-error"
          {% endif %}
          placeholder="{{ 'customer.register.password' | t }}"
        >
        <label for="RegisterForm-password">
          {{ 'customer.register.password' | t }}
        </label>
      </div>
      {%- if form.errors contains 'password' -%}
        <span id="RegisterForm-password-error" class="form__message">
          <svg aria-hidden="true" focusable="false">
            <use href="#icon-error" />
          </svg>
          {{ form.errors.translated_fields.password | capitalize }}
          {{ form.errors.messages.password }}.
        </span>
      {%- endif -%}
      <button id="register-submit-button">
        {{ 'customer.register.submit' | t }}
      </button>
    {%- endform -%}
  </div>
</div>

{% schema %}
{
  "name": "t:sections.main-register.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
